//Electro Tamizha
#include <LiquidCrystal.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

static const unsigned char PROGMEM image_data_Saraarray[] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xe7, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xe1, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xe1, 0xe0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf3, 0xe1, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x67, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x67, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x17, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x1f, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x0f, 0x00, 0x1f, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xfe, 0xf0, 0x07, 0x20, 0x7c, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xfe, 0x10, 0x07, 0x40, 0x7c, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xfe, 0x00, 0x01, 0x40, 0x7c, 0x1f, 0xff, 0x07, 0x03, 0xf8, 0x03, 0x80, 0x39, 0xfe, 0x7f, 0xff, 
    0xff, 0x88, 0x01, 0xc1, 0xff, 0xff, 0xfe, 0x03, 0x00, 0xf8, 0x01, 0x80, 0x18, 0xfe, 0x3f, 0xff, 
    0xff, 0x88, 0x01, 0xc1, 0xff, 0xff, 0xfc, 0x01, 0x00, 0x38, 0x03, 0x80, 0x38, 0x7e, 0x3f, 0xff, 
    0xf0, 0x78, 0x01, 0xfe, 0x03, 0xff, 0xf8, 0x71, 0x1c, 0x38, 0xff, 0x8f, 0xf8, 0x7e, 0x3f, 0xff, 
    0xf0, 0x18, 0x11, 0xe0, 0x00, 0x3f, 0xf8, 0xff, 0x1e, 0x18, 0xff, 0x8f, 0xf8, 0x3e, 0x3f, 0xff, 
    0xf8, 0x1c, 0x17, 0xc0, 0x00, 0x1f, 0xf1, 0xff, 0x1f, 0x18, 0xff, 0x8f, 0xf8, 0x1e, 0x3f, 0xff, 
    0xfe, 0x1f, 0x9f, 0x81, 0x00, 0x0f, 0xf1, 0x80, 0x1e, 0x18, 0x03, 0x80, 0x38, 0x9e, 0x3f, 0xff, 
    0xff, 0xff, 0xfe, 0xe0, 0x00, 0x3f, 0xe2, 0x00, 0x00, 0x38, 0x01, 0x80, 0x18, 0xce, 0x3f, 0xff, 
    0xff, 0xf0, 0x7e, 0x80, 0x03, 0xff, 0xe2, 0x01, 0x00, 0x78, 0x03, 0x80, 0x38, 0xe6, 0x3f, 0xff, 
    0xff, 0xe3, 0xfe, 0x80, 0x07, 0xff, 0xe3, 0xf1, 0x00, 0xf8, 0xff, 0x8f, 0xf8, 0xe2, 0x3f, 0xff, 
    0xff, 0xe3, 0xfe, 0x80, 0x07, 0xff, 0xe3, 0xe3, 0x10, 0x38, 0xff, 0x8f, 0xf8, 0xf0, 0x3f, 0xff, 
    0xff, 0x80, 0x3e, 0xc0, 0x1f, 0xff, 0xe3, 0xc3, 0x1e, 0x18, 0xff, 0x8f, 0xf8, 0xf8, 0x3f, 0xff, 
    0xff, 0xf0, 0x7e, 0xff, 0xff, 0xff, 0xe0, 0x07, 0x1f, 0x08, 0x03, 0x80, 0x38, 0xfc, 0x3f, 0xff, 
    0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0x1f, 0x88, 0x01, 0x80, 0x18, 0xfe, 0x3f, 0xff, 
    0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xbf, 0xfc, 0x03, 0xc0, 0x3d, 0xff, 0x7f, 0xff, 
    0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0x80, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x1f, 0xf8, 0x3e, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x07, 0xe0, 0x0c, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xc0, 0x0e, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xf1, 0xe3, 0xc7, 0x87, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x00, 0x00, 0x0b, 0xff, 0xf1, 0xe3, 0x8f, 0xc7, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x00, 0x3f, 0xff, 0xff, 0xf0, 0x07, 0x8f, 0xc7, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x00, 0x00, 0x08, 0x7f, 0xf0, 0x07, 0x1f, 0xc7, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x00, 0x00, 0x08, 0x7f, 0xf0, 0x03, 0x1f, 0xc7, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x00, 0x00, 0x08, 0x7f, 0xf1, 0xe1, 0x1f, 0xc7, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x00, 0x01, 0xff, 0xff, 0xf1, 0xf1, 0x1f, 0x8f, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf0, 0x00, 0x00, 0x0c, 0x1f, 0xf1, 0xf1, 0x1f, 0x8f, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0xf1, 0xc1, 0x8f, 0x0f, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x03, 0x80, 0x1f, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x0b, 0xff, 0xf0, 0x07, 0xc0, 0x3f, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x0b, 0xff, 0xf0, 0x3f, 0xf0, 0x7f, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x0b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
int Relay = 12; 
int sensor = 11; 
int val; 
//LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
LiquidCrystal lcd(2,3,4,5,6,7);
void setup(){
  Serial.begin(115200);
 
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000); // Pause for 2 seconds
 
  // Clear the buffer.
  display.clearDisplay();
  
  // Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_Saraarray, 128, 64, 1);
  display.display();
  pinMode(12,OUTPUT); 
  pinMode(11,INPUT);
  lcd.begin(16, 2);
  lcd.print("   GREEN-BOT");
  lcd.setCursor(0, 1);
  lcd.print("GROW POSITIVITY");
}

void loop(){
  val = digitalRead(11); 
  if(val == LOW) 
  {
    lcd.setCursor(0,1);
    lcd.print("PLANTS ARE :)   ");
  digitalWrite(12,HIGH); 
  }
  else
  {
    lcd.setCursor(0,1);
    lcd.print("WATERING PLANTS....");
  digitalWrite(12,LOW); 
  }
  delay(400);}
